var time = new Date();
var deltaTime = 0;

if(document.readyState === "complete" || document.readyState === "interactive"){
    setTimeout(Init, 1);
}else{
    document.addEventListener("DOMContentLoaded", Init); 
}

function Init() {
    time = new Date();
    Start();
    Loop();
}

function Loop() {
    deltaTime = (new Date() - time) / 1000;
    time = new Date();
    Update();
    requestAnimationFrame(Loop);
}
/* Inicio del juego*/
var sueloY = 22;
var velY = 0;
var impulso = 900;
var gravedad = 2500;

/*posiciones del dinosaurio*/
var dinoPosX = 42;
var dinoPosY = sueloY;

/*posicion escenario*/
var sueloX = 0;
var velEscenario = 1200/3;
var gamevel = 1;
var puntaje = 0;

var parado = false;
var saltando = false;

var contenedor;
var dino;
var textopuntaje;
var suelo;
var gameOver;

var tiempoHastaObstaculo = 2;
var tiempoObstaculoMin = 0.7;
var tiempoObstaculoMax = 1.8;
var obstaculoPosY = 16;
var obstaculos = [];


function Start(){
    gameOver = document.querySelector(".game-over");
    suelo = document.querySelector(".suelo");
    contenedor = document.querySelector(".contenedor");
    textopuntaje = document.querySelector (".puntaje");
    dino = document.querySelector (".dino");
    document.addEventListener("keydown", HandleKeyDown);
} 

function Update(){
    if (parado) return;
    MoverSuelo();
    MoverDino();
    MoverDinosaurio();
    MoverSuelo();
    DecidirCrearObstaculos();
    DecidirCrearNubes();
    MoverObstaculos();
    MoverNubes();
    DetectarColision();
    velY -= gravedad * deltaTime;
}

function HandleKeyDown(ev){
    if (ev.keycode == 32){ /*Habilita a que la tecla para arriba se pueda usar*/
        Saltar();
    } 
}

function Saltar() {
    if (dinoPosY === sueloY){
        saltando = true;
        velY = impulso;
        dino.classList.remove("dino-corriendo");
    }

}
    


function MoverSuelo(){
    sueloX += CalcularDesplazamiento();
    suelo.style.left = -(sueloX % contenedor.clientWidth) + "px";

}

function CalcularDesplazamiento(){
    return velEscenario * deltaTime * gamevel;
}

function MoverDino(){
    dinoPosY += velY * deltaTime;
    if(dinoPosY< sueloY) {

        TocarSuelo();
    }
    dino.style.bottom = dinoPosY+"px";
}

function TocarSuelo() {
    dinoPosY = sueloY;
    velY = 0;
    if (saltando){
        dino.classList.add("dino-corriendo");


    }
    saltando = false;
}

function DecidirCrearCactus (){ /*comprueba si a pasado tiempo suficiente para crear el obstaculo*/
tiempoHastaCactus -= deltaTime;
if (tiempoHastaCactus<=0){ /*si llega a 0 se crea un obstaculo*/
    CrearCactus();
}
}

function CrearCactus (){
    var obstaculo = document.createElement("div") /*la agregamos a la clase cactus para que se vea asi*/
    contenedor.appendChild(obstaculo);
    obstaculo.classList.add("cactus")
    obstaculo.posX= contenedor.clientWidth;
    obstaculo.style.left = contenedor.clientWidth+"px";

    obstaculo.push(obstaculo);
    tiempoHastaCactus = tiempoHastaCactus+ Math.random()*(tiempoMaximo-tiempoMinimo)/gamevel /* lista que nos ayuda a llevar el recuento de cuantos cactus hay activos*/ 
    
}
function MoverCactus (){ /*tenemos varios obstaculos en el arrive entonces hay que hacer un bucle for para mover uno por uno*/
for (var i = obstaculos.length - 1; i >= 0; i--) {
    if(obstaculos[i].posX < -obstaculos[i].clientWidth) {
        obstaculos[i].parentNode.removeChild(obstaculos[i]);
        obstaculos.splice(i, 1);
        GanarPuntos();
    }else{
        obstaculos[i].posX -= CalcularDesplazamiento(); /*hay que calcular si el obstaculo se salio del contenedor por el lado izquierdo*/
        obstaculos[i].style.left = obstaculos[i].posX+"px";
}

function GanarPuntos() {
    score++;
    textoScore.innerText = score;
    if(score == 5){
        gameVel = 1.5;
        contenedor.classList.add("mediodia");
    }else if(score == 10) {
        gameVel = 2;
        contenedor.classList.add("tarde");
    } else if(score == 20) {
        gameVel = 3;
        contenedor.classList.add("noche");
    }
    suelo.style.animationDuration = (3/gameVel)+"s";
}

function DetectarColision() { // 
    for (var i = 0; i < obstaculos.length; i++) {
        if(obstaculos[i].posX > dinoPosX + dino.clientWidth) {
            //EVADE
            break; //al estar en orden, no puede chocar con m√°s
        }else{
            if(IsCollision(dino, obstaculos[i], 10, 30, 15, 20)) {
                GameOver();
            }
        }
    }
}